<!DOCTYPE html>
<html lang="en">
	<head>
		<title>three.js webgl - particles - sprites</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
		<style>
			body {
				background-color: #241f2e;
				margin: 0px;
				overflow: hidden;
				font-family:Monospace;
				font-size:13px;
				text-align:center;
				font-weight: bold;
				text-align:center;
			}

			a {
				color:#0078ff;
			}
		</style>
	</head>
	<body>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r71/three.min.js"></script>

		<script>

			var container;
			var camera, scene, renderer, particles, geometry, materials = [], parameters, i, h, color, sprite, size;
			var mouseX = 0, mouseY = 0;

			var windowHalfX = window.innerWidth / 2;
			var windowHalfY = window.innerHeight / 2;

			init();
			animate();

			function init() {

				container = document.createElement( 'div' );
				document.body.appendChild( container );

				camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 2000 );
				camera.position.z = 1200;

				scene = new THREE.Scene();
				scene.fog = new THREE.FogExp2( 0x241f2e, 0.001 );

				geometry = new THREE.Geometry();

				sprite = THREE.ImageUtils.loadTexture( "/assets/img/star.png" );

				for ( i = 0; i < 3000; i ++ ) {

					var vertex = new THREE.Vector3();
					vertex.x = Math.random() * 2000 - 1000;
					vertex.y = Math.random() * 2000 - 1000;
					vertex.z = Math.random() * 2000 - 1000;

					geometry.vertices.push( vertex );

				}

				materials[i] = new THREE.PointCloudMaterial( { size: 10, map: sprite, blending: THREE.AdditiveBlending, depthTest: false, transparent : true } );
				materials[i].color.setHSL( 0.12, 0.39, 0.94 );

				particles = new THREE.PointCloud( geometry, materials[i] );

				scene.add( particles );

				renderer = new THREE.WebGLRenderer({ alpha: true });
				renderer.setPixelRatio( window.devicePixelRatio );
				renderer.setSize( window.innerWidth, window.innerHeight );
				container.appendChild( renderer.domElement );

				//

				window.addEventListener( 'resize', onWindowResize, false );

			}

			function onWindowResize() {

				windowHalfX = window.innerWidth / 2;
				windowHalfY = window.innerHeight / 2;

				camera.aspect = window.innerWidth / window.innerHeight;
				camera.updateProjectionMatrix();

				renderer.setSize( window.innerWidth, window.innerHeight );

			}

			//

			function animate() {

				requestAnimationFrame( animate );
				render();
			}

			function render() {

				var time = Date.now() * 0.00002;

				camera.lookAt( scene.position );

				for ( i = 0; i < scene.children.length; i ++ ) {

					var object = scene.children[ i ];

					if ( object instanceof THREE.PointCloud ) {

						object.rotation.z = time;

						//object.rotation.y = time * ( i < 4 ? i + 1 : - ( i + 1 ) );
						//object.rotation.x = time * ( i < 4 ? i + 1 : - ( i + 1 ) );

					}

				}

				renderer.render( scene, camera );

			}

		</script>
	</body>
</html>
